{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91905\\\\Desktop\\\\Quiz Website\\\\quizapp\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport { useEffect, useReducer } from \"react\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Questions from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  // 'loading' , 'error' , 'ready' , 'active' , 'finished'\n  status: 'loading',\n  index: 0,\n  answer: null\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'dataRecieved':\n      return {\n        ...state,\n        questions: action.payload,\n        status: 'ready'\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\"\n      };\n    case \"newAnswer\":\n      return {\n        ...state,\n        answer: action.payload\n      };\n    default:\n      throw new Error(\"Action Unkown\");\n  }\n}\nexport default function App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index\n  }, dispatch] = useReducer(reducer, initialState);\n  const numQuestion = questions.length;\n  useEffect(function () {\n    fetch(\"http://localhost:8000/questions\").then(res => res.json()).then(data => dispatch({\n      type: 'dataRecieved',\n      payload: data\n    })).catch(err => dispatch({\n      type: \"dataFailed\"\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === 'loading' && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 38\n      }, this), status === 'error' && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }, this), status === 'ready' && /*#__PURE__*/_jsxDEV(StartScreen, {\n        numQuestion: numQuestion,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(Questions, {\n        dispatch: dispatch,\n        question: questions[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n}\n_s(App, \"fHHarRauZ4Gr4QFZGiITgc/lJqI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","useEffect","useReducer","Loader","Error","StartScreen","Questions","jsxDEV","_jsxDEV","initialState","questions","status","index","answer","reducer","state","action","type","payload","App","_s","dispatch","numQuestion","length","fetch","then","res","json","data","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","_c","$RefreshReg$"],"sources":["C:/Users/91905/Desktop/Quiz Website/quizapp/src/components/App.js"],"sourcesContent":["import Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport Error from \"./Error\";\r\nimport StartScreen from \"./StartScreen\";\r\nimport Questions from \"./Questions\";\r\nconst initialState = {\r\n    questions: [],\r\n// 'loading' , 'error' , 'ready' , 'active' , 'finished'\r\n    status: 'loading',\r\n    index: 0,\r\n    answer: null,\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type)\r\n    {  \r\n        case 'dataRecieved': \r\n            return {\r\n                ...state, questions: action.payload,\r\n                status : 'ready',\r\n            }\r\n        case \"dataFailed\":\r\n            return {\r\n                ...state , status : \"error\",\r\n            }\r\n        case \"start\":\r\n            return {\r\n                ...state , status : \"active\",\r\n            }\r\n        case \"newAnswer\":\r\n            return {\r\n                ...state, answer: action.payload\r\n            }\r\n        default:\r\n             throw new Error(\"Action Unkown\");\r\n       } \r\n}\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [{questions , status , index}, dispatch ] = useReducer(reducer, initialState);\r\n    const numQuestion = questions.length; \r\n    \r\n    useEffect(function () {\r\n        fetch(\"http://localhost:8000/questions\")\r\n            .then(res => res.json())\r\n            .then(data => dispatch({ type: 'dataRecieved', payload: data }))\r\n            .catch(err => dispatch({type : \"dataFailed\"}));\r\n    }, []);\r\n\r\n    return <div className=\"app\">\r\n        <Header />\r\n        <Main>\r\n            {status === 'loading' && <Loader/>} \r\n            {status === 'error' && <Error />} \r\n            {status === 'ready' && <StartScreen numQuestion={numQuestion} dispatch={dispatch} />} \r\n            {status === \"active\" && <Questions dispatch={dispatch} question = {questions[index]} />}\r\n        </Main>\r\n    </div>\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}